version: '3.7'

services:
  frontend:
    image: frontend-bytepeeps
    container_name: frontend-bytepeeps
    restart: always
    expose:
      - 80
    env_file:
      - fe.env

  backend:
    image: backend-bytepeeps
    container_name: backend-bytepeeps
    restart: always
    expose:
      - 3000
    env_file:
      - be.env

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./vhost:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html

  nginx-proxy-acme:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=mohamedntayeh@gmail.com

  db:
    image: postgres
    container_name: postgresql
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - db.env
# removing all images: docker stop $(docker ps -q) && docker rm $(docker ps -a -q) && docker rmi $(docker images)
# pull latest images: docker pull
# restart docker compose: docker compose up -d
